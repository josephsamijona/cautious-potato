# Generated by Django 5.1.4 on 2025-01-01 04:11

import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="EmailVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("reminder_frequency", models.IntegerField(default=24)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OTPVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PasswordReset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TranslationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deadline", models.DateTimeField()),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "original_document",
                    models.FileField(upload_to="original_documents/"),
                ),
                (
                    "translated_document",
                    models.FileField(blank=True, upload_to="translated_documents/"),
                ),
                (
                    "client_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "translator_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("is_paid", models.BooleanField(default=False)),
                ("stripe_payment_id", models.CharField(blank=True, max_length=100)),
                (
                    "translation_type",
                    models.CharField(
                        choices=[("REMOTE", "Remote"), ("ONSITE", "On Site")],
                        max_length=20,
                    ),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("QUOTE", "Quote Pending"),
                            ("QUOTED", "Quote Sent"),
                            ("PAID", "Quote Paid"),
                            ("ASSIGNED", "Assigned"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("REJECTED", "Rejected"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="QUOTE",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_translations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="client_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="source_translations",
                        to="translations.language",
                    ),
                ),
                (
                    "target_language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="target_translations",
                        to="translations.language",
                    ),
                ),
                (
                    "translator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="translator_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TranslationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=20)),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "translation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="translations.translationrequest",
                    ),
                ),
            ],
            options={
                "ordering": ["-changed_at"],
            },
        ),
        migrations.CreateModel(
            name="TranslatorLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("BASIC", "Basic"),
                            ("INTERMEDIATE", "Intermediate"),
                            ("ADVANCED", "Advanced"),
                            ("NATIVE", "Native"),
                            ("CERTIFIED", "Certified"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "certification_document",
                    models.FileField(blank=True, upload_to="certifications/"),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="translations.language",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrator"),
                            ("CLIENT", "Client"),
                            ("TRANSLATOR", "Translator"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(blank=True, upload_to="profile_pics/"),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "phone_primary",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Primary contact number",
                        max_length=128,
                        region=None,
                    ),
                ),
                (
                    "phone_secondary",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Secondary contact number",
                        max_length=128,
                        region=None,
                    ),
                ),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state_province", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "country",
                    django_countries.fields.CountryField(blank=True, max_length=2),
                ),
                ("company_name", models.CharField(blank=True, max_length=200)),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_phone_verified", models.BooleanField(default=False)),
                ("is_address_verified", models.BooleanField(default=False)),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACTIVE", "Active"),
                            ("SUSPENDED", "Suspended"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("bank_name", models.CharField(blank=True, max_length=200)),
                ("bank_account_name", models.CharField(blank=True, max_length=200)),
                ("bank_account_number", models.CharField(blank=True, max_length=200)),
                ("bank_routing_number", models.CharField(blank=True, max_length=200)),
                ("bank_swift_code", models.CharField(blank=True, max_length=50)),
                ("bank_iban", models.CharField(blank=True, max_length=50)),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("INDIVIDUAL", "Individual"),
                            ("COMPANY", "Company"),
                            ("ORGANIZATION", "Organization"),
                            ("AGENCY", "Translation Agency"),
                        ],
                        default="INDIVIDUAL",
                        max_length=20,
                    ),
                ),
                (
                    "bank_account_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CHECKING", "Checking Account"),
                            ("SAVINGS", "Savings Account"),
                            ("BUSINESS", "Business Account"),
                            ("CURRENT", "Current Account"),
                            ("IBAN", "IBAN Account"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("number_of_ratings", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "languages",
                    models.ManyToManyField(
                        through="translations.TranslatorLanguage",
                        to="translations.language",
                    ),
                ),
                (
                    "preferred_language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="preferred_by_users",
                        to="translations.language",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="translatorlanguage",
            name="translator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="translations.userprofile",
            ),
        ),
        migrations.CreateModel(
            name="TranslatorRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "translation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="translations.translationrequest",
                    ),
                ),
                (
                    "translator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("translation", "translator", "rated_by")},
            },
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(fields=["user"], name="translation_user_id_b821ce_idx"),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(fields=["role"], name="translation_role_427a8f_idx"),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["created_at"], name="translation_created_0d9df1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="translatorlanguage",
            unique_together={("translator", "language")},
        ),
    ]
